{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\gabo-dev\\\\components\\\\scroll\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { FaArrowCircleUp } from 'react-icons/fa';\nimport { ScrollWrapper } from './styles';\n\nvar Scroll = function Scroll(_ref) {\n  _s();\n\n  var showBelow = _ref.showBelow;\n\n  var _useState = useState(showBelow ? false : true),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  useEffect(function () {\n    if (showBelow) {\n      window.addEventListener('scroll', handleScroll);\n      return function () {\n        return window.removeEventListener('scroll'.handleScroll);\n      };\n    }\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    if (window.pageYOffset > showBelow) {\n      setShow(!show);\n    } else if (show) {\n      setShow(false);\n    }\n  };\n\n  var handleClick = function handleClick() {\n    window['scrollTo']({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  var scrollToTop = function scrollToTop() {\n    scroll.scrollToTop();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ScrollWrapper, {\n    onClick: scrollToTop,\n    children: /*#__PURE__*/_jsxDEV(FaArrowCircleUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Scroll, \"WbFxT88fJJOHnK1Uo54O80mUHwI=\");\n\n_c = Scroll;\nexport default Scroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/gabo-dev/components/scroll/index.js"],"names":["React","useEffect","useState","Link","animateScroll","scroll","FaArrowCircleUp","ScrollWrapper","Scroll","showBelow","show","setShow","window","addEventListener","handleScroll","removeEventListener","pageYOffset","handleClick","top","behavior","scrollToTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,aAAa,IAAIC,MAAhC,QAA8C,cAA9C;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACRP,QAAQ,CAACO,SAAS,GAAG,KAAH,GAAW,IAArB,CADA;AAAA,MACzBC,IADyB;AAAA,MACnBC,OADmB;;AAGhCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,SAAJ,EAAe;AACbG,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AAEA,aAAO;AAAA,eAAMF,MAAM,CAACG,mBAAP,CAA2B,SAASD,YAApC,CAAN;AAAA,OAAP;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIF,MAAM,CAACI,WAAP,GAAqBP,SAAzB,EAAoC;AAClCE,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,KAFD,MAEO,IAAIA,IAAJ,EAAU;AACfC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAND;;AAQA,MAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,MAAM,CAAC,UAAD,CAAN,CAAmB;AAAEM,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,QAAQ,EAAE;AAApB,KAAnB;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBf,IAAAA,MAAM,CAACe,WAAP;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,OAAO,EAAEA,WAAxB;AAAA,2BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAhCD;;GAAMZ,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport { FaArrowCircleUp } from 'react-icons/fa';\r\nimport { ScrollWrapper } from './styles';\r\n\r\nconst Scroll = ({ showBelow }) => {\r\n  const [show, setShow] = useState(showBelow ? false : true);\r\n\r\n  useEffect(() => {\r\n    if (showBelow) {\r\n      window.addEventListener('scroll', handleScroll);\r\n\r\n      return () => window.removeEventListener('scroll'.handleScroll);\r\n    }\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    if (window.pageYOffset > showBelow) {\r\n      setShow(!show);\r\n    } else if (show) {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    window['scrollTo']({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  return (\r\n    <ScrollWrapper onClick={scrollToTop}>\r\n      <FaArrowCircleUp />\r\n    </ScrollWrapper>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n"]},"metadata":{},"sourceType":"module"}